#!/usr/bin/env python

"""
An example at-least-once feed with resettable sources that exercises the new
AtLeastOnceSourceConnector and at-least-once protocol.
"""

import logging
import sys
import threading
import time

from wallaroo.experimental.connectors import (
                                   ThrottledFileReader,
                                   MultiSourceConnector)

fmt = '%(asctime)s %(levelname)-8s [%(filename)s:%(lineno)d] %(message)s'
logging.root.formatter = logging.Formatter(fmt)
stream_handler = logging.StreamHandler()
stream_handler.setFormatter(logging.root.formatter)
logging.root.addHandler(stream_handler)
logging.root.setLevel(logging.DEBUG)

class Sender(threading.Thread):
    def __init__(self, client):
        super(Sender, self).__init__()
        self.daemon = True
        self.client = client
        self.error = None

    def run(self):
        self.error = self.client.join()

    def start(self):
        self.client.connect()
        super(Sender, self).start()
        time.sleep(0.05)


version = "0.0.1"
cookie = "Dragons-Love-Tacos"
program_name = "celsius at least once"
instance_name = "instance"
required_params = ['host', 'port', 'filenames']
optional_params = []

client = MultiSourceConnector(version, cookie, program_name, instance_name,
                              '127.0.0.1', '7100', delay=0.05)


sender1 = Sender(client)

sender1.start()

filename = sys.argv[1]
try:
    bytes_per_sec = int(sys.argv[2])
except:
    bytes_per_sec = 150

client.add_source(ThrottledFileReader(filename = sys.argv[1],
                                      is_text_lines = True,
                                      limit_rate = bytes_per_sec))


sender1.join()

# Rely on the iterator method of our connector subclass
print("Reached the end of all files. Shutting down.")
print(client._sent)
